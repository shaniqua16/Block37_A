// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Review {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  item    Item     @relation(fields: [itemsId], references: [id])
  itemsId  String
}

model Comment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  item      Item     @relation(fields: [itemId], references: [id])
  itemId  String
}

model Profile {
  id     String  @id @default(uuid())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId String  @unique
}

model User {
  id      String   @id @default(uuid())
  email   String   @unique
  password  String 
  name    String?
  reviews   Review[]
  profile Profile?
  comments Comment[]
   createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 

}

model Item {
  id String @id @default(uuid())
  name String?
  discription String?
review Review[]
comments Comment[]

}